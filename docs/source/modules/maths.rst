数学工具 (maths)
=================

本模块提供了一些数学工具函数，主要包括获取正整数所有因子、统计数字出现次数以及使用 Karatsuba 算法进行大整数乘法计算。这些函数在数学计算、数据分析以及算法优化中具有广泛的应用。

get_all_factors 函数
----------------------

.. py:function:: get_all_factors(n: int) -> list

   返回正整数 n 的所有因子。
   
   **参数**:

   - **n**: 正整数，待求因子的数字。
   
   **返回**:

   - 列表，包含 n 的所有因子。
   
   **应用场景**:

   用于求解数论问题、因数分解、以及在某些算法中需要获取数字的所有约数等情况。
   
   **示例**::

      >>> factors = get_all_factors(28)
      >>> print(factors)  # 可能输出: [1, 2, 4, 7, 14, 28]


digitCount 函数
----------------

.. py:function:: digitCount(n, k)

   统计从 1 到 n 中数字 k 出现的次数。
   
   **参数**:

   - **n**: 正整数，表示计数范围的上限。
   - **k**: 数字（0-9），需要统计的目标数字。
   
   **返回**:

   - 整数，表示在数字 1 到 n 中数字 k 出现的总次数。
   
   **应用场景**:

   用于数字统计、数据分析和解决某些数学次数问题。
   
   **示例**::

      >>> count = digitCount(100, 1)
      >>> print(count)  # 输出 21，表示数字 1 在 1 到 100 中出现的次数


karatsuba_multiplication 函数
------------------------------

.. py:function:: karatsuba_multiplication(x, y)

   使用 Karatsuba 算法计算两个整数的乘积。
   
   **参数**:

   - **x**: 整数，乘数之一。
   - **y**: 整数，乘数之二。
   
   **返回**:

   - 整数，返回 x 与 y 的乘积。
   
   **算法原理**:

   采用 Karatsuba 算法，通过递归分解数字，降低大整数乘法的计算复杂度，从而加速计算过程。
   
   **应用场景**:

   适用于大整数乘法、提高乘法效率及在算法竞赛中使用分治策略解决乘法问题。
   
   **示例**::

      >>> product = karatsuba_multiplication(1234, 5678)
      >>> print(product)  # 输出 7006652

--------------------------------------------------

通过上述示例，可以快速掌握 maths 模块中各函数的使用方法，这对于解决一些数学运算和算法优化问题提供了有效的工具支持。 